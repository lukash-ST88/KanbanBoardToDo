"""init cleared

Revision ID: e16e40a29ddd
Revises: 
Create Date: 2023-05-16 21:46:00.536276

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e16e40a29ddd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Task', sa.Column('creation_date', sa.DateTime(), nullable=False))
    op.add_column('Task', sa.Column('update_date', sa.DateTime(), nullable=True))
    op.add_column('Task', sa.Column('expiration_date', sa.DateTime(), nullable=False))
    op.alter_column('Task', 'slug',
               existing_type=sa.VARCHAR(length=30),
               nullable=False)
    op.drop_column('Task', 'date_created_timezone')
    op.drop_column('Task', 'date_updated')
    op.drop_column('Task', 'date_expiration')
    op.drop_column('Task', 'date_created')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Task', sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('Task', sa.Column('date_expiration', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('Task', sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('Task', sa.Column('date_created_timezone', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.alter_column('Task', 'slug',
               existing_type=sa.VARCHAR(length=30),
               nullable=True)
    op.drop_column('Task', 'expiration_date')
    op.drop_column('Task', 'update_date')
    op.drop_column('Task', 'creation_date')
    # ### end Alembic commands ###
